openapi: 3.0.0
info:
  version: 1.0.0
  title: NudmUEAU
  description: UDM UE Authentication Service
externalDocs:
  description: '3GPP TS 29.503 Unified Data Management Services, version 15.3.0'
  url: 'http://www.3gpp.org/ftp/Specs/archive/29_series/29.503/'
servers:
  - url: '{apiRoot}/nudm-ueau/v1'
    variables:
      apiRoot:
        default: 'https://example.com'
        description: apiRoot as defined in subclause subclause 4.4 of 3GPP TS 29.501.
security:
  - oAuth2ClientCredentials:
      - nudm-ueau
  - {}
paths:
  '/{supiOrSuci}/security-information/generate-auth-data':
    post:
      summary: Generate authentication data for the UE
      operationId: GenerateAuthData
      tags:
        - Generate Auth Data
      parameters:
        - name: supiOrSuci
          in: path
          description: SUPI or SUCI of the user
          required: true
          schema:
            type: string
            pattern: >-
              ^(imsi-[0-9]{5,15}|nai-.+|
              suci-(0-[0-9]{3}-[0-9]{2,3}|[1-7]-.+)-[0-9]{1,4}-(0-0-.+|[a-fA-F1-9]-([1-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])-[a-fA-F0-9]+)|.+)$
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - servingNetworkName
                - ausfInstanceId
              properties:
                supportedFeatures:
                  type: string
                  pattern: '^[A-Fa-f0-9]*$'
                servingNetworkName:
                  type: string
                  pattern: '^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$'
                resynchronizationInfo:
                  type: object
                  required:
                    - rand
                    - auts
                  properties:
                    rand:
                      type: string
                      pattern: '^[A-Fa-f0-9]{32}$'
                    auts:
                      type: string
                      pattern: '^[A-Fa-f0-9]{28}$'
                ausfInstanceId:
                  type: string
                  format: uuid
        required: true
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - authType
                properties:
                  authType:
                    anyOf:
                      - type: string
                        enum:
                          - 5G_AKA
                          - EAP_AKA_PRIME
                          - EAP_TLS
                      - type: string
                  supportedFeatures:
                    type: string
                    pattern: '^[A-Fa-f0-9]*$'
                  authenticationVector:
                    oneOf:
                      - type: object
                        required:
                          - avType
                          - rand
                          - xres
                          - autn
                          - ckPrime
                          - ikPrime
                        properties:
                          avType:
                            anyOf:
                              - type: string
                                enum:
                                  - 5G_HE_AKA
                                  - EAP_AKA_PRIME
                              - type: string
                          rand:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                          xres:
                            type: string
                            pattern: '^[A-Fa-f0-9]{8,32}$'
                          autn:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                          ckPrime:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                          ikPrime:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                      - type: object
                        required:
                          - avType
                          - rand
                          - xresStar
                          - autn
                          - kausf
                        properties:
                          avType:
                            anyOf:
                              - type: string
                                enum:
                                  - 5G_HE_AKA
                                  - EAP_AKA_PRIME
                              - type: string
                          rand:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                          xresStar:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                          autn:
                            type: string
                            pattern: '^[A-Fa-f0-9]{32}$'
                          kausf:
                            type: string
                            pattern: '^[A-Fa-f0-9]{64}$'
                    discriminator:
                      propertyName: avType
                      mapping:
                        5G_HE_AKA: '#/components/schemas/Av5GHeAka'
                        EAP_AKA_PRIME: '#/components/schemas/AvEapAkaPrime'
                  supi:
                    type: string
                    pattern: '^(imsi-[0-9]{5,15}|nai-.+|.+)$'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '501':
          description: Not Implemented
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '503':
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        default:
          description: Unexpected error
  '/{supi}/auth-events':
    post:
      summary: Create a new confirmation event
      operationId: ConfirmAuth
      tags:
        - Confirm Auth
      parameters:
        - name: supi
          in: path
          description: SUPI of the user
          required: true
          schema:
            type: string
            pattern: '^(imsi-[0-9]{5,15}|nai-.+|.+)$'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - nfInstanceId
                - success
                - timeStamp
                - authType
                - servingNetworkName
              properties:
                nfInstanceId:
                  type: string
                  format: uuid
                success:
                  type: boolean
                timeStamp:
                  format: date-time
                  type: string
                authType:
                  anyOf:
                    - type: string
                      enum:
                        - 5G_AKA
                        - EAP_AKA_PRIME
                        - EAP_TLS
                    - type: string
                servingNetworkName:
                  type: string
                  pattern: '^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$'
        required: true
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - nfInstanceId
                  - success
                  - timeStamp
                  - authType
                  - servingNetworkName
                properties:
                  nfInstanceId:
                    type: string
                    format: uuid
                  success:
                    type: boolean
                  timeStamp:
                    format: date-time
                    type: string
                  authType:
                    anyOf:
                      - type: string
                        enum:
                          - 5G_AKA
                          - EAP_AKA_PRIME
                          - EAP_TLS
                      - type: string
                  servingNetworkName:
                    type: string
                    pattern: '^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$'
          headers:
            Location:
              description: >-
                Contains the URI of the newly created resource, according to the
                structure:
                {apiRoot}/nudm-ueau/v1/{supi}/auth-events/{authEventId}
              required: true
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        '503':
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: string
                  cause:
                    type: string
                  invalidParams:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        reason:
                          type: string
                      required:
                        - param
                    minItems: 1
        default:
          description: Unexpected error
components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '{nrfApiRoot}/oauth2/token'
          scopes:
            nudm-ueau: Access to the nudm-ueau API
  schemas:
    AuthenticationInfoRequest:
      type: object
      required:
        - servingNetworkName
        - ausfInstanceId
      properties:
        supportedFeatures:
          type: string
          pattern: '^[A-Fa-f0-9]*$'
        servingNetworkName:
          type: string
          pattern: '^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$'
        resynchronizationInfo:
          type: object
          required:
            - rand
            - auts
          properties:
            rand:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            auts:
              type: string
              pattern: '^[A-Fa-f0-9]{28}$'
        ausfInstanceId:
          type: string
          format: uuid
    AuthenticationInfoResult:
      type: object
      required:
        - authType
      properties:
        authType:
          anyOf:
            - type: string
              enum:
                - 5G_AKA
                - EAP_AKA_PRIME
                - EAP_TLS
            - type: string
        supportedFeatures:
          type: string
          pattern: '^[A-Fa-f0-9]*$'
        authenticationVector:
          oneOf:
            - type: object
              required:
                - avType
                - rand
                - xres
                - autn
                - ckPrime
                - ikPrime
              properties:
                avType:
                  anyOf:
                    - type: string
                      enum:
                        - 5G_HE_AKA
                        - EAP_AKA_PRIME
                    - type: string
                rand:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
                xres:
                  type: string
                  pattern: '^[A-Fa-f0-9]{8,32}$'
                autn:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
                ckPrime:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
                ikPrime:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
            - type: object
              required:
                - avType
                - rand
                - xresStar
                - autn
                - kausf
              properties:
                avType:
                  anyOf:
                    - type: string
                      enum:
                        - 5G_HE_AKA
                        - EAP_AKA_PRIME
                    - type: string
                rand:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
                xresStar:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
                autn:
                  type: string
                  pattern: '^[A-Fa-f0-9]{32}$'
                kausf:
                  type: string
                  pattern: '^[A-Fa-f0-9]{64}$'
          discriminator:
            propertyName: avType
            mapping:
              5G_HE_AKA: '#/components/schemas/Av5GHeAka'
              EAP_AKA_PRIME: '#/components/schemas/AvEapAkaPrime'
        supi:
          type: string
          pattern: '^(imsi-[0-9]{5,15}|nai-.+|.+)$'
    AuthenticationVector:
      oneOf:
        - type: object
          required:
            - avType
            - rand
            - xres
            - autn
            - ckPrime
            - ikPrime
          properties:
            avType:
              anyOf:
                - type: string
                  enum:
                    - 5G_HE_AKA
                    - EAP_AKA_PRIME
                - type: string
            rand:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            xres:
              type: string
              pattern: '^[A-Fa-f0-9]{8,32}$'
            autn:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            ckPrime:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            ikPrime:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
        - type: object
          required:
            - avType
            - rand
            - xresStar
            - autn
            - kausf
          properties:
            avType:
              anyOf:
                - type: string
                  enum:
                    - 5G_HE_AKA
                    - EAP_AKA_PRIME
                - type: string
            rand:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            xresStar:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            autn:
              type: string
              pattern: '^[A-Fa-f0-9]{32}$'
            kausf:
              type: string
              pattern: '^[A-Fa-f0-9]{64}$'
      discriminator:
        propertyName: avType
        mapping:
          5G_HE_AKA: '#/components/schemas/Av5GHeAka'
          EAP_AKA_PRIME: '#/components/schemas/AvEapAkaPrime'
    AvEapAkaPrime:
      type: object
      required:
        - avType
        - rand
        - xres
        - autn
        - ckPrime
        - ikPrime
      properties:
        avType:
          anyOf:
            - type: string
              enum:
                - 5G_HE_AKA
                - EAP_AKA_PRIME
            - type: string
        rand:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        xres:
          type: string
          pattern: '^[A-Fa-f0-9]{8,32}$'
        autn:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        ckPrime:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        ikPrime:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
    Av5GHeAka:
      type: object
      required:
        - avType
        - rand
        - xresStar
        - autn
        - kausf
      properties:
        avType:
          anyOf:
            - type: string
              enum:
                - 5G_HE_AKA
                - EAP_AKA_PRIME
            - type: string
        rand:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        xresStar:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        autn:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        kausf:
          type: string
          pattern: '^[A-Fa-f0-9]{64}$'
    ResynchronizationInfo:
      type: object
      required:
        - rand
        - auts
      properties:
        rand:
          type: string
          pattern: '^[A-Fa-f0-9]{32}$'
        auts:
          type: string
          pattern: '^[A-Fa-f0-9]{28}$'
    AuthEvent:
      type: object
      required:
        - nfInstanceId
        - success
        - timeStamp
        - authType
        - servingNetworkName
      properties:
        nfInstanceId:
          type: string
          format: uuid
        success:
          type: boolean
        timeStamp:
          format: date-time
          type: string
        authType:
          anyOf:
            - type: string
              enum:
                - 5G_AKA
                - EAP_AKA_PRIME
                - EAP_TLS
            - type: string
        servingNetworkName:
          type: string
          pattern: '^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$'
    Autn:
      type: string
      pattern: '^[A-Fa-f0-9]{32}$'
    Auts:
      type: string
      pattern: '^[A-Fa-f0-9]{28}$'
    CkPrime:
      type: string
      pattern: '^[A-Fa-f0-9]{32}$'
    IkPrime:
      type: string
      pattern: '^[A-Fa-f0-9]{32}$'
    Kausf:
      type: string
      pattern: '^[A-Fa-f0-9]{64}$'
    Rand:
      type: string
      pattern: '^[A-Fa-f0-9]{32}$'
    Xres:
      type: string
      pattern: '^[A-Fa-f0-9]{8,32}$'
    XresStar:
      type: string
      pattern: '^[A-Fa-f0-9]{32}$'
    SupiOrSuci:
      type: string
      pattern: >-
        ^(imsi-[0-9]{5,15}|nai-.+|
        suci-(0-[0-9]{3}-[0-9]{2,3}|[1-7]-.+)-[0-9]{1,4}-(0-0-.+|[a-fA-F1-9]-([1-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])-[a-fA-F0-9]+)|.+)$
    ServingNetworkName:
      type: string
      pattern: '^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$'
    Success:
      type: boolean
    AuthType:
      anyOf:
        - type: string
          enum:
            - 5G_AKA
            - EAP_AKA_PRIME
            - EAP_TLS
        - type: string
    AvType:
      anyOf:
        - type: string
          enum:
            - 5G_HE_AKA
            - EAP_AKA_PRIME
        - type: string
